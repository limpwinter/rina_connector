@startuml Class Diagram
!pragma layout smetana

scale  2048 width
scale  2048 height


package "Rina" {

  package "Controller" {
    class "RinaController" {
      +receive_response(request_js_str: str): None
      +handle_order(annotation: Dict): Tuple[str, int]
      +handle_book(annotation: Dict): Tuple[str, int]
      +handle_info(): Tuple[str, int]
      +handle_menu(): Tuple[str, int]
      +handle_feedback(annotation: Dict): Tuple[str, int]
      +__init__()
    }
    
    class "RinaServer" {
      +start_server(): None
    }
  }

  package "Model" {
    class "FeedbackDatabase" {
      +leave_feedback(text: str): None
      +print_db(): None
    }
    
    class "TablesDatabase" {
      +print_free_tables(): None
      +get_availability(index: int): int
      +book_table(index: int): None
      +__init__()
    }
  }
  
}


package "Telegram" {

  package "Model" {
    package "Json" {
      class "JsonController" {
        +dict_to_str(dictionary: Dict): str
        +str_to_dct(string: str): Dict
      }
    }

    package "Response" {
      interface "BaseResponseInterface" {
        +from_json(json_file: Dict): None
      }
    
      class "ResponseSample" {
        +from_json(json_file: Dict): None
        +__init__(): None
      }
    
      class "ResponseController" {
        +set_params(json_file: Dict): None
        +__init__(): None
      }
    }

    package "Request" {
      interface "BaseRequestInterface" {
        +to_json(): Dict
      }
    
      class "MakeOrderRequest" {
        +to_json(): Dict
        +__init__(number_of_dishes: List[int]): None
      }
    
      class "BookingRequest" {
        +to_json(): Dict
        +__init__(table_number: int, number_of_guests: int): None
      }
    
      class "RestaurantInfoRequest" {
        +to_json(): Dict
        +__init__(info: str): None
      }
    
      class "MenuRequest" {
        +to_json(): Dict
        +__init__(type_of_menu: str): None
      }
    
      class "FeedBackRequest" {
        +to_json(): Dict
        +__init__(feedback_text: str): None
      }
    
      class "RequestController" {
        +set_params(*args): None
        +to_json(): str
        +__init__(user_id: int, request_type: str): None
      }
    }
    
  }

  package "Controller" {
    
    class "TgServer" {
      +{static}start_server(): Coroutine[None, None, None]
    }

    class "TgController" {
      -tg_view: Callable
      -command_request_dict: Dict
      +try_create_db(): void
      +handle_auth(telegram_id: int): void
      +handle_contact_recieved(telegram_id: int, phone_number: str): void
      +handle_contact_declined(telegram_id: int): void
      +handle_back(telegram_id: int): void
      +handle_info(telegram_id: int): void
      +handle_table_typo(telegram_id: int): void
      +handle_table(telegram_id: int, input_text: str): void
      +handle_data_typo(telegram_id: int): void
      +handle_data(telegram_id: int, input_text: str): void
      +handle_info_about(telegram_id: int, input_text: str): void
      +handle_hours(telegram_id: int, input_text: str): void
      +handle_news(telegram_id: int, input_text: str): void
      +handle_menu(telegram_id: int, input_text: str): void
      +send_request(telegram_id: int, input_text: str): void
      +receive_response(response_js_str: str): void
      +run(): void
    }
  }

  package "View" {
    class "TgView" {
      -bot: Bot
      -dp: Dispatcher
      -controller: Callable
      -COMMANDS_TEXTS_TO_HANDLER_NAMES: Dict
      -COMMANDS_INCLUDING_MESSAGE_TEXT: List
      +set_controller(controller: Callable): void
      +change_keyboard(telegram_id: int, activated_button_layout: any, reply: str): void
      +send_message_to_user(telegram_id: int, text: str, image: str): void
      +make_handler_with_args(handler: Callable, include_message_text: bool, include_phone_number: bool): Callable
      +register_handlers(): void
      +start_bot(): void
      +run(): void
    }
  }

}


package "RMQ" {

  package "Controller"{
    class RmqController {
      +{static}send_to_rina(message_dict: dict): None
      +{static}send_to_tg(message_dict: dict): None
      +{static}start_consuming_from_rina(controller): None
      +{static}start_consuming_from_tg(controller): None
    }

    class TgConsumer {
      +{static}start_consuming(tg_controller): None
    }

    class TgProducer {
      +{static}produce(message_dict: dict): None
    }

    class RinaConsumer {
      +{static}start_consuming(rina_controller): None
    }

    class RinaProducer {
      +{static}produce(message_dict: dict): None
    }
  }

}

BaseRequestInterface <|-- MakeOrderRequest
BaseRequestInterface <|-- BookingRequest
BaseRequestInterface <|-- RestaurantInfoRequest
BaseRequestInterface <|-- MenuRequest
BaseRequestInterface <|-- FeedBackRequest
BaseResponseInterface <|-- ResponseSample
BaseResponseInterface <|-- ResponseController

TgController -right-* TgView
RmqController -- RinaController
RmqController -- TgController
RinaController --> FeedbackDatabase : Uses >
RinaController --> TablesDatabase : Uses >
ResponseController - RinaController
RequestController -- RinaController
ResponseController -- BaseResponseInterface
RequestController - BaseRequestInterface
JsonController -- RequestController : Uses >
JsonController -- ResponseController : Uses >

RmqController ..> TgConsumer : Uses >
RmqController ..> TgProducer : Uses >
RmqController ..> RinaConsumer : Uses >
RmqController ..> RinaProducer : Uses >
@enduml
